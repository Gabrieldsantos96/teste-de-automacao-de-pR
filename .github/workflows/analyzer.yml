name: PR Summary

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  pr-summary:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get PR diff
        run: |
          echo "### Arquivos modificados:" > diff.txt
          git diff --name-only origin/${{ github.base_ref }} > files.txt
          cat files.txt >> diff.txt
          echo -e "\n### Diff completo:" >> diff.txt
          git diff origin/${{ github.base_ref }} >> diff.txt

      - name: Summarize with HuggingFace
        run: |
          PROMPT="VocÃª Ã© um revisor sÃªnior de Pull Requests e deve atuar como uma mistura de arquiteto de software e analista de negÃ³cios. Gere um relatÃ³rio detalhado, incluindo resumo, novas features, impacto no sistema, melhorias sugeridas, riscos de bugs/performance e um diagrama textual em Mermaid. Agora analise o seguinte PR diff:\n$(cat diff.txt)"
          # chamada Ã  API
          curl -s -X POST \
            -H "Authorization: Bearer ${{ secrets.HUGGINGFACE_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d "{\"inputs\": \"$PROMPT\"}" \
            https://api-inference.huggingface.co/models/mistralai/Mistral-7B-Instruct-v0.2 \
            -o response.json

          echo "=== Resposta crua do HuggingFace salva em response.json ==="
          cat response.json

          # extrair texto de forma segura
          SUMMARY=$(jq -r '.[0].generated_text // .[0].text // .' response.json)

          echo "### ðŸ¤– RelatÃ³rio Detalhado do PR" > pr-summary.md
          echo "$SUMMARY" >> pr-summary.md

          gh pr comment ${{ github.event.pull_request.number }} --body-file pr-summary.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
