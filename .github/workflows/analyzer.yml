name: PR Summary (Free HuggingFace)

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  summarize:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # necessÃ¡rio para diff completo

      - name: Detectar branch base
        id: base
        run: |
          BASE_BRANCH=$(jq -r .pull_request.base.ref "$GITHUB_EVENT_PATH")
          echo "BASE_BRANCH=$BASE_BRANCH" >> $GITHUB_ENV

      - name: Buscar branch base
        run: git fetch origin ${{ env.BASE_BRANCH }}

      - name: Gerar diff e lista de arquivos
        run: |
          echo "### Arquivos modificados:" > diff.txt
          git diff --name-only origin/${{ env.BASE_BRANCH }}...HEAD >> diff.txt
          echo -e "\n### Diff completo:" >> diff.txt
          git diff origin/${{ env.BASE_BRANCH }}...HEAD >> diff.txt
          # Escapa caracteres especiais para JSON
          DIFF_ESCAPED=$(jq -Rs . < diff.txt)
          echo "PR_DIFF=$DIFF_ESCAPED" >> $GITHUB_ENV

      - name: Teste simples de HuggingFace
        run: |
          echo "=== TESTE SIMPLES DA API ==="
          RAW_TEST=$(curl -s -X POST \
            -H "Authorization: Bearer ${{ secrets.HUGGINGFACE_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
              "inputs": "Resuma este texto: OlÃ¡ mundo, este Ã© um teste da API HuggingFace."
            }' \
            https://api-inference.huggingface.co/models/mistralai/Mistral-7B-Instruct-v0.2)
          echo "$RAW_TEST"
          TEST_PARSED=$(echo "$RAW_TEST" | jq -r '.[0].generated_text // empty')
          echo "$TEST_PARSED"
          echo "============================"

      - name: Resumir PR com HuggingFace
        run: |
          echo "=== Chamando HuggingFace com diff do PR ==="
          RAW_RESPONSE=$(curl -s -X POST \
            -H "Authorization: Bearer ${{ secrets.HUGGINGFACE_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d "{
              \"inputs\": \"VocÃª Ã© um revisor sÃªnior de Pull Requests e deve gerar um relatÃ³rio detalhado sobre este PR.\nDiff completo:\n${PR_DIFF}\"
            }" \
            https://api-inference.huggingface.co/models/mistralai/Mistral-7B-Instruct-v0.2)

          echo "=== RAW RESPONSE ==="
          echo "$RAW_RESPONSE"
          echo "==================="

          PARSED_RESPONSE=$(echo "$RAW_RESPONSE" | jq -r '.[0].generated_text // empty')
          echo "=== PARSED RESPONSE ==="
          echo "$PARSED_RESPONSE"

          echo "### ðŸ¤– Resumo do PR" > pr-summary.md
          echo "$PARSED_RESPONSE" >> pr-summary.md

          gh pr comment ${{ github.event.pull_request.number }} --body-file pr-summary.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
